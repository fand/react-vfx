(this["webpackJsonpreact-vfx-docs"]=this["webpackJsonpreact-vfx-docs"]||[]).push([[0],{103:function(e,n,t){},104:function(e,n,t){},105:function(e,n,t){},113:function(e,n,t){},114:function(e,n,t){},115:function(e,n,t){},13:function(e,n,t){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.VFXP=n.VFXDiv=n.VFXSpan=n.VFXVideo=n.VFXImg=n.VFXProvider=void 0;var i=t(79);Object.defineProperty(n,"VFXProvider",{enumerable:!0,get:function(){return i.VFXProvider}});var o=t(97);Object.defineProperty(n,"VFXImg",{enumerable:!0,get:function(){return o.VFXImg}});var s=t(98);Object.defineProperty(n,"VFXVideo",{enumerable:!0,get:function(){return s.VFXVideo}});var a=r(t(99));n.VFXSpan=a.default("span"),n.VFXDiv=a.default("div"),n.VFXP=a.default("p")},150:function(e,n,t){},151:function(e,n,t){"use strict";t.r(n);var r=t(8),i=t(37),o=t.n(i),s=(t(78),t(13)),a=t(12),c=t(155),l=t(63),u=t(29),d=t(10),f=t(7);var h=function(e){var n=e.scroll,t=Object(r.useRef)(),i=Object(u.isMobile)()?7:13;return Object(c.c)((function(){var e=t.current;void 0!==e&&(e.rotation.y+=.004,e.rotation.z+=.01,e.position.set(0,300*n.get()-7,-15))})),Object(f.jsxs)("mesh",{ref:t,children:[Object(f.jsx)("torusBufferGeometry",{attach:"geometry",args:[i,1,2,3]}),Object(f.jsx)("meshNormalMaterial",{attach:"material"})]})};function v(e,n){var t=n-e;return Math.random()*t+e}function m(e){var n=e.geometry,t=e.material,i=Object(r.useRef)(),o=v(-50,50),s=v(-140,100),a=v(-50,50),c=Math.sqrt(o*o+a*a);c<30&&(o*=30/c,a*=30/c,c=30);var l=Object(u.isMobile)()?18:12;return Object(r.useEffect)((function(){if(void 0!==i.current){var e=Math.random()*l,n=Math.random()*l,t=Math.random()*l;i.current.scale.set(e,n,t);var r=Math.floor(900*e)*Math.PI*.5;i.current.rotation.set(r,r,r),i.current.position.set(o,s,a)}}),[l,o,s,a]),Object(f.jsx)("mesh",{ref:i,material:t,geometry:n})}var p=function(e){var n=e.count,t=e.scroll,i=Object(r.useRef)(),o=Object(r.useState)(null),s=Object(a.a)(o,2),l=s[0],u=s[1],d=Object(r.useState)(null),h=Object(a.a)(d,2),v=h[0],p=h[1];return Object(c.c)((function(){if(void 0!==i.current&&"undefined"!==typeof window){var e=t.get();i.current.position.set(0,100*e-50,0),i.current.rotation.set(0,Date.now()/8e3+5*e,0)}})),Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)("boxBufferGeometry",{ref:u,args:[1e-5,1,1]}),Object(f.jsx)("meshDepthMaterial",{ref:p}),Object(f.jsx)("group",{ref:i,children:l&&v&&new Array(n).fill(0).map((function(e,n){return Object(f.jsx)(m,{material:v,geometry:l},n)}))})]})},g=t(74),b=t(32),x=t(66),j=t(67);function y(){var e=Object(r.useRef)(),n=Object(c.d)(),t=n.scene,i=n.gl,o=n.size,s=n.camera;return Object(r.useEffect)((function(){void 0!==e.current&&e.current.setSize(o.width,o.height)}),[o]),Object(c.c)((function(){void 0!==e.current&&e.current.render()}),2),Object(f.jsxs)("effectComposer",{ref:e,args:[i],children:[Object(f.jsx)("renderPass",{attachArray:"passes",scene:t,camera:s}),Object(f.jsx)("shaderPass",{attachArray:"passes",args:[x.a],"material-uniforms-resolution-value":[1/o.width,1/o.height],renderToScreen:!0})]})}Object(c.b)({EffectComposer:g.a,ShaderPass:b.a,RenderPass:j.a});var w={position:"fixed",top:0,left:0,width:"100vw",height:"100vh",zIndex:-1,pointerEvents:"none"},O=function(){var e=Object(c.d)(),n=e.scene,t=e.camera;n.background=new d.Color(2236962);var i=Object(l.useSpring)((function(){return{scroll:0}})),o=Object(a.a)(i,2),s=o[0].scroll,v=o[1],m=Object(r.useCallback)((function(e){return v({scroll:window.scrollY})}),[v]),g=s.interpolate((function(e){return"undefined"===typeof window||"undefined"===typeof document||"number"!==typeof e?0:e/(document.body.scrollHeight-window.innerHeight)}));return Object(r.useEffect)((function(){if("undefined"!==typeof window&&"undefined"!==typeof document)return window.addEventListener("scroll",m),function(){window.removeEventListener("scroll",m)}}),[m]),Object(c.c)((function(){var e=g.get();t.rotation.set(.1*-Math.PI-e*Math.PI*.4,0,0)})),Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(h,{scroll:g}),Object(f.jsx)(p,{count:Object(u.isMobile)()?800:1500,scroll:g})]})},F=function(){return Object(f.jsxs)(c.a,{style:w,children:[Object(f.jsx)(y,{}),Object(f.jsx)(O,{})]})},_=(t(103),["#00FFEE","#00FF99","#0099FF","#9900FF","#FF0099"]),V=function(e){var n=Object(r.useState)("#00FFEE"),t=Object(a.a)(n,2),i=t[0],o=t[1],s=Object(r.useState)("inset 0 0 10px #00FFEE"),c=Object(a.a)(s,2),l=c[0],u=c[1],d=e.interval||5e3;return Object(r.useEffect)((function(){var e=0,n=setInterval((function(){var n=_[e++%_.length];o(n),u("inset 0 0 10px ".concat(n))}),d);return function(){clearInterval(n)}}),[d]),Object(f.jsx)("div",{className:"Frame",style:{borderColor:i,boxShadow:l}})};t(104);var C=function(){return Object(f.jsx)("section",{className:"LogoSection",children:Object(f.jsx)(s.VFXImg,{className:"logo",src:(e="logo.png","".concat("/react-vfx","/").concat(e)),shader:"rgbShift"})});var e};t(105);function S(e){return"".concat("/react-vfx","/").concat(e)}var X=function(){return Object(f.jsx)("section",{className:"IntroSection",children:Object(f.jsxs)("p",{children:[Object(f.jsx)(s.VFXImg,{src:S("logo-oneline.png"),shader:"rgbGlitch"})," ","is a"," ",Object(f.jsx)(s.VFXImg,{src:S("react-logo-oneline.png"),shader:"rainbow"})," ","component library. It allows you to add"," ",Object(f.jsx)(s.VFXImg,{src:S("webgl-logo.png"),shader:"spring"})," ","powered effects to your"," ",Object(f.jsx)(s.VFXImg,{src:S("react-logo-oneline.png"),shader:"rainbow"})," ","application. You can easily add"," ",Object(f.jsxs)(s.VFXSpan,{style:{display:"block"},shader:"glitch",overflow:!0,children:["glitched images,"," "]}),Object(f.jsx)(s.VFXSpan,{style:{display:"block"},shader:"sinewave",overflow:!0,children:"stylized videos"})," ","and",Object(f.jsxs)(s.VFXSpan,{style:{display:"block"},shader:"shine",children:[" ","shiny texts"," "]}),"to your website!!"]})})},D=t(26),T=t.n(D);t(113);function I(e){return"".concat("/react-vfx","/").concat(e)}var k=function(){return Object(f.jsxs)("section",{className:"ExamplesSection",children:[Object(f.jsx)("h2",{id:"examples",children:"Examples"}),Object(f.jsxs)("section",{children:[Object(f.jsx)("h3",{children:"Add effects to your images!!"}),Object(f.jsxs)("div",{className:"ImgContainer",children:[Object(f.jsx)(T.a,{height:320,children:Object(f.jsx)(s.VFXImg,{src:I("react-logo.png"),shader:"rainbow"})}),Object(f.jsx)(T.a,{height:320,children:Object(f.jsx)(s.VFXImg,{src:I("david.png"),shader:"rgbShift",overflow:!0})})]})]}),Object(f.jsxs)("section",{children:[Object(f.jsxs)("h3",{children:[Object(f.jsx)("span",{role:"img","aria-label":"zap",children:"\u26a1"}),"Animated GIFs are also supported!!",Object(f.jsx)("span",{role:"img","aria-label":"zap",children:"\u26a1"})]}),Object(f.jsxs)("div",{className:"ImgContainer",children:[Object(f.jsx)(T.a,{height:320,children:Object(f.jsx)(s.VFXImg,{src:I("chill.gif"),shader:"sinewave",overflow:!0})}),Object(f.jsx)(T.a,{height:320,children:Object(f.jsx)(s.VFXImg,{src:I("octocat.gif"),shader:"glitch",overflow:!0})}),Object(f.jsx)(T.a,{height:320,children:Object(f.jsx)(s.VFXImg,{src:I("cat.gif"),shader:"rainbow"})}),Object(f.jsx)(T.a,{height:320,children:Object(f.jsx)(s.VFXImg,{src:I("doge.gif"),shader:"pixelate"})})]})]}),Object(f.jsxs)("section",{children:[Object(f.jsx)("h3",{children:"Videos work well!"}),Object(f.jsx)(T.a,{height:320,children:Object(f.jsx)(s.VFXVideo,{src:I("mind_blown.mp4"),shader:"halftone",autoPlay:!0,loop:!0,muted:!0,playsInline:!0})})]}),Object(f.jsx)("section",{className:"VFXSpanExample",children:Object(f.jsxs)(s.VFXSpan,{shader:"sinewave",overflow:!0,children:["You can also add effects to ",Object(f.jsx)("br",{}),"plain text!!!!!"]})}),Object(f.jsxs)("section",{children:[Object(f.jsx)("h3",{children:"... and make Transition Effects!"}),Object(f.jsx)(s.VFXImg,{shader:"warpTransition",src:I("logo.png"),overflow:!0}),Object(f.jsx)("br",{}),Object(f.jsx)(s.VFXImg,{shader:"slitScanTransition",src:I("logo.png")}),Object(f.jsx)("br",{}),Object(f.jsx)(s.VFXImg,{shader:"pixelateTransition",src:I("logo.png")}),Object(f.jsx)("br",{})]})]})};t(114);var P=function(){return Object(f.jsx)("section",{className:"AuthorSection",children:Object(f.jsxs)("a",{href:"https://twitter.com/amagitakayosi",target:"_blank",rel:"noopener noreferrer",children:[Object(f.jsx)(s.VFXImg,{className:"icon",src:(e="amagi.png","".concat("/react-vfx","/").concat(e)),shader:"glitch",overflow:!0}),Object(f.jsx)("h3",{className:"name",children:"Made by AMAGI"})]})});var e},E=t(22),R=(t(115),function(){var e=Object(r.useState)("Try editing text!"),n=Object(a.a)(e,2),t=n[0],i=n[1],o=Object(r.useState)(t),c=Object(a.a)(o,2),l=c[0],u=c[1],d=Object(r.useCallback)((function(){u(t)}),[t]);return Object(f.jsxs)("section",{className:"InputSection",children:[Object(f.jsx)("p",{style:{fontSize:"48px",fontWeight:"bold"},children:Object(f.jsx)(s.VFXSpan,{shader:"rainbow",children:l})}),Object(f.jsx)("textarea",{value:t,onChange:function(e){return i(e.target.value)}}),Object(f.jsx)("button",{type:"button",onClick:d,children:Object(f.jsx)(s.VFXSpan,{shader:"rainbow",children:"FIRE"})})]})}),z=t(23),B=t.n(z),A=t(156),L=t(71),M=t(154);A.a.registerLanguage("jsx",L.a);var G,U,H,q,N,Y,K,W,J,Q=function(e){var n=e.children;return Object(f.jsx)(f.Fragment,{children:n})},Z={fontSize:"20px",width:"960px",maxWidth:"calc(100% - 40px)",margin:"0 auto"},$=function(e){var n=e.children;return Object(f.jsx)(A.a,{language:"jsx",style:M.a,customStyle:Z,children:n})},ee=function(e){var n=e.children;return Object(f.jsx)(A.a,{language:"jsx",style:M.a,customStyle:Z,PreTag:Q,children:n})},ne=function(){return Object(f.jsxs)(f.Fragment,{children:[Object(f.jsxs)("section",{children:[Object(f.jsx)("h2",{id:"install",children:"Install"}),Object(f.jsx)("code",{children:"npm i react-vfx"}),Object(f.jsxs)("p",{children:["See"," ",Object(f.jsx)("a",{href:"https://github.com/fand/react-vfx",target:"_blank",rel:"noopener noreferrer",children:"GitHub"})," ","for more info."]})]}),Object(f.jsxs)("section",{children:[Object(f.jsx)("h2",{id:"usage",children:"Usage"}),Object(f.jsxs)("p",{children:["REACT-VFX consists of"," ",Object(f.jsx)("b",{children:Object(f.jsx)("i",{children:"VFX Provider"})})," ","and"," ",Object(f.jsx)("b",{children:Object(f.jsx)("i",{children:"VFX Elements"})}),"."]}),Object(f.jsxs)("p",{children:["First, wrap your entire app with"," ",Object(f.jsx)(ee,{children:"<VFXProvider>"}),"."]}),Object(f.jsx)($,{children:B()(G||(G=Object(E.a)(["\n            import { VFXProvider } from 'react-vfx';\n\n            function App {\n              return (\n                <VFXProvider>\n                  {/* Place your app here */}\n                </VFXProvider>\n              );\n            }\n        "])))}),Object(f.jsxs)("p",{children:["Then you can use VFX Elements anywhere in you app. Use"," ",Object(f.jsx)(ee,{children:"<VFXImg>"}),","," ",Object(f.jsx)(ee,{children:"<VFXVideo>"})," or"," ",Object(f.jsx)(ee,{children:"<VFXSpan>"})," instead of"," ",Object(f.jsx)(ee,{children:"<img>"}),","," ",Object(f.jsx)(ee,{children:"<video>"})," or"," ",Object(f.jsx)(ee,{children:"<span>"}),"."]}),Object(f.jsxs)("p",{children:["VFX Elements have ",Object(f.jsx)(ee,{children:"shader"})," property. etc. All available shaders are listed"," ",Object(f.jsx)("a",{href:"https://github.com/fand/react-vfx/tree/master/src/constants.ts",target:"_blank",rel:"noopener noreferrer",children:"here"}),"."]}),Object(f.jsx)($,{children:B()(U||(U=Object(E.a)(['\n            import { VFXImg } from \'react-vfx\';\n\n            function Component {\n              return (\n                <VFXImg\n                  src="react-logo.png"\n                  shader="rainbow"/>\n              );\n            }\n        '])))}),Object(f.jsxs)("section",{children:[Object(f.jsx)("h3",{children:"Image"}),Object(f.jsxs)("p",{children:["Use ",Object(f.jsx)(ee,{children:"<VFXImg>"})," instead of"," ",Object(f.jsx)(ee,{children:"<img>"}),".",Object(f.jsx)("br",{})]}),Object(f.jsx)($,{children:B()(H||(H=Object(E.a)(['\n                import { VFXImg } from \'react-vfx\';\n\n                <VFXImg src="react-logo.png" shader="rainbow"/>\n\n                // or add attributes\n                <VFXImg\n                  src="react-logo.png"\n                  alt="React Logo"\n                  shader="rainbow"/>\n            '])))})]}),Object(f.jsxs)("section",{children:[Object(f.jsx)("h3",{children:"Video"}),Object(f.jsxs)("p",{children:["Use ",Object(f.jsx)(ee,{children:"<VFXVideo>"})," instead of"," ",Object(f.jsx)(ee,{children:"<video>"}),".",Object(f.jsx)("br",{})]}),Object(f.jsx)($,{children:B()(q||(q=Object(E.a)(['\n                import { VFXVideo } from \'react-vfx\';\n\n                <VFXVideo src="mind_blown.mp4" shader="halftone"/>\n            '])))})]}),Object(f.jsxs)("section",{children:[Object(f.jsx)("h3",{children:"Text"}),Object(f.jsxs)("p",{children:["Use ",Object(f.jsx)(ee,{children:"<VFXSpan>"})," instead of"," ",Object(f.jsx)(ee,{children:"<span>"}),".",Object(f.jsx)("br",{})]}),Object(f.jsx)($,{children:B()(N||(N=Object(E.a)(["\n                import { VFXSpan } from 'react-vfx';\n\n                <VFXSpan>Hello world!</VFXSpan>\n            "])))}),Object(f.jsxs)("p",{children:[Object(f.jsx)(ee,{children:"<VFXSpan>"})," automatically re-renders when its content is updated."]}),Object(f.jsx)(R,{}),Object(f.jsx)("p",{children:Object(f.jsx)("i",{children:"NOTE: VFXSpan doesn't work with nested elements."})})]})]}),Object(f.jsxs)("section",{children:[Object(f.jsx)("h2",{id:"custom-shaders",children:"Custom Shaders"}),Object(f.jsx)("p",{children:"You can use your own shader in REACT-VFX."}),Object(f.jsx)($,{children:B()(Y||(Y=Object(E.a)(["\n        import { VFXSpan } from 'react-vfx';\n\n        const blink = `\n        uniform vec2 resolution; // Resolution of the element\n        uniform vec2 offset;     // Position of the element in the screen\n        uniform float time;      // Time passed since mount\n        uniform sampler2D src;   // Input texture\n\n        void main() {\n            // Get UV in the element\n            vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n            gl_FragColor = texture2D(src, uv) * step(.5, fract(time));\n        }\n        `;\n\n        export default = () => (\n            <VFXSpan shader={blink}>I'm blinking!</VFXSpan>\n        );\n    "],["\n        import { VFXSpan } from 'react-vfx';\n\n        const blink = \\`\n        uniform vec2 resolution; // Resolution of the element\n        uniform vec2 offset;     // Position of the element in the screen\n        uniform float time;      // Time passed since mount\n        uniform sampler2D src;   // Input texture\n\n        void main() {\n            // Get UV in the element\n            vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n            gl_FragColor = texture2D(src, uv) * step(.5, fract(time));\n        }\n        \\`;\n\n        export default = () => (\n            <VFXSpan shader={blink}>I'm blinking!</VFXSpan>\n        );\n    "])))}),Object(f.jsx)("p",{children:"This renders like this:"}),Object(f.jsx)(s.VFXSpan,{shader:"\nuniform vec2 resolution; // Resolution of the element\nuniform vec2 offset;     // Position of the element in the screen\nuniform float time;      // Time passed since mount\nuniform sampler2D src;   // Input texture\n\nvoid main() {\n    // Get UV in the element\n    vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n    gl_FragColor = texture2D(src, uv) * step(.5, fract(time));\n}\n",style:{fontSize:"72px",fontWeight:"bold",fontStyle:"italic"},children:"I'm blinking!"}),Object(f.jsxs)("section",{className:"Secton3",children:[Object(f.jsx)("h3",{children:"Transition"}),Object(f.jsxs)("p",{children:["REACT-VFX provides a uniform variable"," ",Object(f.jsx)(ee,{children:"float enterTime;"})," to write transition effects."," "]}),Object(f.jsx)($,{children:B()(K||(K=Object(E.a)(["\n            import { VFXSpan } from 'react-vfx';\n\n            const fadeIn = `\n            uniform vec2 resolution;\n            uniform vec2 offset;\n            uniform float time;\n            uniform float enterTime; // Time since entering the viewport\n            uniform sampler2D src;\n\n            void main() {\n                vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n                gl_FragColor = texture2D(src, uv);\n\n                // Fade alpha by enterTime\n                gl_FragColor.a *= smoothstep(0.0, 3.0, enterTime);\n            }\n            `;\n\n            export default = () => (\n                <VFXSpan shader={fadeIn}>I'm fading!</VFXSpan>\n            );\n        "],["\n            import { VFXSpan } from 'react-vfx';\n\n            const fadeIn = \\`\n            uniform vec2 resolution;\n            uniform vec2 offset;\n            uniform float time;\n            uniform float enterTime; // Time since entering the viewport\n            uniform sampler2D src;\n\n            void main() {\n                vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n                gl_FragColor = texture2D(src, uv);\n\n                // Fade alpha by enterTime\n                gl_FragColor.a *= smoothstep(0.0, 3.0, enterTime);\n            }\n            \\`;\n\n            export default = () => (\n                <VFXSpan shader={fadeIn}>I'm fading!</VFXSpan>\n            );\n        "])))}),Object(f.jsx)("p",{children:"This renders like this:"}),Object(f.jsx)(s.VFXSpan,{shader:"\nuniform vec2 resolution;\nuniform vec2 offset;\nuniform float time;\nuniform float enterTime; // Time since entering the viewport\nuniform sampler2D src;\n\nvoid main() {\n    vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n    gl_FragColor = texture2D(src, uv);\n\n    // Fade alpha by enterTime\n    gl_FragColor.a *= smoothstep(0.0, 3.0, enterTime);\n}\n",style:{fontSize:"72px",fontWeight:"bold",fontStyle:"italic"},children:"I'm fading!"})]}),Object(f.jsxs)("section",{className:"Secton4",children:[Object(f.jsx)("h3",{children:"Custom Uniforms"}),Object(f.jsx)("p",{children:"REACT-VFX accepts custom uniform variables as `uniforms`. You can pass objects of parameters or functions:"}),Object(f.jsx)($,{children:B()(W||(W=Object(E.a)(["\n            // dictionary of parameters or functions\n            export type VFXUniforms = {\n                [name: string]: VFXUniformValue | (() => VFXUniformValue);\n            };\n\n            // REACT-VFX currently supports float, vec2, vec3 and vec4.\n            export type VFXUniformValue =\n                | number // float\n                | [number, number] // vec2\n                | [number, number, number] // vec3\n                | [number, number, number, number]; // vec4\n        "])))}),Object(f.jsx)("p",{children:"If a parameter frequently changes over time (e.g. scroll position), consider passing it as a function than a native value to avoid performance problem."}),Object(f.jsx)($,{children:B()(J||(J=Object(E.a)(["\n            import { VFXSpan } from 'react-vfx';\n\n            const scrollByScroll = `\n            uniform vec2 resolution;\n            uniform vec2 offset;\n            uniform float scroll; // custom uniform passed as props\n            uniform sampler2D src;\n\n            void main() {\n                vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n                // scroll X by scroll\n                uv.x = fract(uv.x + scroll * 30.);\n\n                gl_FragColor = texture2D(src, uv);\n            }\n            `;\n\n            export default = () => (\n                <VFXSpan shader={scrollByScroll} uniforms={{\n                    scroll: () => window.scrollY / (document.body.scrollHeight - window.innerHeight);\n                }}>I'm blinking!</VFXSpan>\n            );\n        "],["\n            import { VFXSpan } from 'react-vfx';\n\n            const scrollByScroll = \\`\n            uniform vec2 resolution;\n            uniform vec2 offset;\n            uniform float scroll; // custom uniform passed as props\n            uniform sampler2D src;\n\n            void main() {\n                vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n                // scroll X by scroll\n                uv.x = fract(uv.x + scroll * 30.);\n\n                gl_FragColor = texture2D(src, uv);\n            }\n            \\`;\n\n            export default = () => (\n                <VFXSpan shader={scrollByScroll} uniforms={{\n                    scroll: () => window.scrollY / (document.body.scrollHeight - window.innerHeight);\n                }}>I'm blinking!</VFXSpan>\n            );\n        "])))}),Object(f.jsx)("p",{children:"This renders like this:"}),Object(f.jsx)(s.VFXSpan,{shader:"\nuniform vec2 resolution;\nuniform vec2 offset;\nuniform float scroll; // custom uniform passed as React props\nuniform sampler2D src;\n\nvoid main() {\n    vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n    // scroll X by scroll\n    uv.x = fract(uv.x + scroll * 30.);\n\n    gl_FragColor = texture2D(src, uv);\n}\n",style:{fontSize:"72px",fontWeight:"bold",fontStyle:"italic"},uniforms:{scroll:function(){return window.scrollY/(document.body.scrollHeight-window.innerHeight)}},overflow:!0,children:"I'm scrolling!"})]})]})]})},te=(t(150),function(){return Object(f.jsxs)(s.VFXProvider,{pixelRatio:1,children:[Object(f.jsx)(F,{}),Object(f.jsxs)("div",{className:"App",children:[Object(f.jsx)(V,{}),Object(f.jsx)(C,{}),Object(f.jsx)(X,{}),Object(f.jsx)(k,{}),Object(f.jsx)(ne,{}),Object(f.jsx)(P,{})]})]})}),re=t(73);t.n(re)()(),o.a.render(Object(f.jsx)(te,{}),document.getElementById("root"))},35:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.VFXContext=void 0;var r=t(8);n.VFXContext=r.createContext(null)},78:function(e,n,t){},79:function(e,n,t){"use strict";var r=t(49),i=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&i(n,e,t);return o(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.VFXProvider=void 0;var c=s(t(8)),l=t(8),u=t(35),d=a(t(84)),f={position:"fixed",top:0,left:0,width:"100vw",height:"100vh","z-index":9999,"pointer-events":"none"};n.VFXProvider=function(e){var n=l.useState(null),t=r(n,2),i=t[0],o=t[1];return l.useEffect((function(){for(var n=document.createElement("canvas"),t=0,i=Object.entries(f);t<i.length;t++){var s=r(i[t],2),a=s[0],c=s[1];n.style.setProperty(a,c.toString())}void 0!==e.zIndex&&n.style.setProperty("z-index",e.zIndex.toString()),document.body.appendChild(n);var l=new d.default(n,e.pixelRatio);return o(l),l.play(),function(){l.stop(),l.destroy(),n.remove()}}),[e.pixelRatio,e.zIndex]),c.createElement(c.Fragment,null,c.createElement(u.VFXContext.Provider,{value:i},e.children))}},84:function(e,n,t){"use strict";var r=t(49),i=t(14),o=t(86),s=t(51),a=t(52),c=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),l=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),u=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&c(n,e,t);return l(n,e),n},d=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(i,o){function s(e){try{c(r.next(e))}catch(n){o(n)}}function a(e){try{c(r.throw(e))}catch(n){o(n)}}function c(e){var n;e.done?i(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,a)}c((r=r.apply(e,n||[])).next())}))},f=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var h=u(t(87)),v=f(t(88)),m=t(89),p=f(t(90)),g=new Map,b=function(){function e(n,t){var a=this;s(this,e),this.canvas=n,this.isPlaying=!1,this.pixelRatio=2,this.elements=[],this.textureLoader=new h.TextureLoader,this.w=0,this.h=0,this.scrollX=0,this.scrollY=0,this.mouseX=0,this.mouseY=0,this.resize=function(){return d(a,void 0,void 0,i.mark((function e(){var n,t,r,s,a,c,l,u;return i.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("undefined"===typeof window){e.next=45;break}n=o(this.elements),e.prev=2,n.s();case 4:if((t=n.n()).done){e.next=15;break}if("text"!==(r=t.value).type||!r.isInViewport){e.next=13;break}if((s=r.element.getBoundingClientRect()).width===r.width&&s.height===r.height){e.next=13;break}return e.next=11,this.rerenderTextElement(r);case 11:r.width=s.width,r.height=s.height;case 13:e.next=4;break;case 15:e.next=20;break;case 17:e.prev=17,e.t0=e.catch(2),n.e(e.t0);case 20:return e.prev=20,n.f(),e.finish(20);case 23:a=o(this.elements),e.prev=24,a.s();case 26:if((c=a.n()).done){e.next=37;break}if("text"!==(l=c.value).type||l.isInViewport){e.next=35;break}if((u=l.element.getBoundingClientRect()).width===l.width&&u.height===l.height){e.next=35;break}return e.next=33,this.rerenderTextElement(l);case 33:l.width=u.width,l.height=u.height;case 35:e.next=26;break;case 37:e.next=42;break;case 39:e.prev=39,e.t1=e.catch(24),a.e(e.t1);case 42:return e.prev=42,a.f(),e.finish(42);case 45:case"end":return e.stop()}}),e,this,[[2,17,20,23],[24,39,42,45]])})))},this.scroll=function(){"undefined"!==typeof window&&(a.scrollX=window.scrollX,a.scrollY=window.scrollY)},this.mousemove=function(e){"undefined"!==typeof window&&(a.mouseX=e.clientX,a.mouseY=window.innerHeight-e.clientY)},this.playLoop=function(){var e=Date.now()/1e3;a.renderer.clear(),a.updateCanvasSize();var n,t=o(a.elements);try{for(t.s();!(n=t.n()).done;){var i=n.value,s=i.element.getBoundingClientRect(),c=a.isRectInViewport(s);if(c&&!i.isInViewport&&(i.enterTime=e,i.leaveTime=1/0),!c&&i.isInViewport&&(i.leaveTime=e),i.isInViewport=c,c&&e-i.leaveTime>i.release)return;i.uniforms.time.value=e-i.startTime,i.uniforms.enterTime.value=-1===i.enterTime?0:e-i.enterTime,i.uniforms.leaveTime.value=-1===i.leaveTime?0:e-i.leaveTime,i.uniforms.resolution.value.x=s.width*a.pixelRatio,i.uniforms.resolution.value.y=s.height*a.pixelRatio,i.uniforms.offset.value.x=s.left*a.pixelRatio,i.uniforms.offset.value.y=(window.innerHeight-s.top-s.height)*a.pixelRatio,i.uniforms.mouse.value.x=a.mouseX*a.pixelRatio,i.uniforms.mouse.value.y=a.mouseY*a.pixelRatio;for(var l=0,u=Object.entries(i.uniformGenerators);l<u.length;l++){var d=r(u[l],2),f=d[0],h=d[1];i.uniforms[f].value=h()}var v=g.get(i.element);void 0!==v&&v.update(),("video"===i.type||i.isGif)&&(i.uniforms.src.value.needsUpdate=!0),i.overflow?a.renderer.setViewport(0,0,window.innerWidth,window.innerHeight):a.renderer.setViewport(s.left,window.innerHeight-(s.top+s.height),s.width,s.height),a.camera.lookAt(i.scene.position);try{a.renderer.render(i.scene,a.camera)}catch(i){console.error(i)}}}catch(m){t.e(m)}finally{t.f()}a.isPlaying&&requestAnimationFrame(a.playLoop)},this.renderer=new h.WebGLRenderer({canvas:n,alpha:!0}),this.renderer.autoClear=!1,this.renderer.setClearAlpha(0),"undefined"!==typeof window&&(this.pixelRatio=t||window.devicePixelRatio,window.addEventListener("resize",this.resize),window.addEventListener("scroll",this.scroll,{passive:!0}),window.addEventListener("mousemove",this.mousemove)),this.resize(),this.scroll(),this.camera=new h.OrthographicCamera(-1,1,1,-1,.1,10),this.camera.position.set(0,0,1)}return a(e,[{key:"destroy",value:function(){"undefined"!==typeof window&&(window.removeEventListener("resize",this.resize),window.removeEventListener("scroll",this.scroll),window.removeEventListener("mousemove",this.mousemove))}},{key:"updateCanvasSize",value:function(){if("undefined"!==typeof window){var e=window.innerWidth,n=window.innerHeight;e===this.w&&n===this.h||(this.canvas.width=e,this.canvas.height=n,this.renderer.setSize(e,n),this.renderer.setPixelRatio(this.pixelRatio),this.w=e,this.h=n)}}},{key:"rerenderTextElement",value:function(e){return d(this,void 0,void 0,i.mark((function n(){var t,r;return i.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,e.element.style.setProperty("opacity","1"),t=e.uniforms.src.value,r=t.image,n.next=6,v.default(e.element,r);case 6:if(0!==r.width&&0!==r.width){n.next=8;break}throw"omg";case 8:e.element.style.setProperty("opacity","0"),t.needsUpdate=!0,n.next=15;break;case 12:n.prev=12,n.t0=n.catch(0),console.error(n.t0);case 15:case"end":return n.stop()}}),n,null,[[0,12]])})))}},{key:"addElement",value:function(e){var n,t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return d(this,void 0,void 0,i.mark((function o(){var s,a,c,l,u,d,f,b,x,j,y,w,O,F,_,V,C,S,X,D,T,I;return i.wrap((function(i){for(;;)switch(i.prev=i.next){case 0:if(s=r.shader||"uvGradient",a=m.shaders[s]||s,c=e.getBoundingClientRect(),l=this.isRectInViewport(c),f=!1,!(e instanceof HTMLImageElement)){i.next=19;break}if(d="img",!(f=!!e.src.match(/\.gif/i))){i.next=16;break}return i.next=11,p.default.create(e.src,this.pixelRatio);case 11:b=i.sent,g.set(e,b),u=new h.Texture(b.getCanvas()),i.next=17;break;case 16:u=this.textureLoader.load(e.src);case 17:i.next=29;break;case 19:if(!(e instanceof HTMLVideoElement)){i.next=24;break}u=new h.VideoTexture(e),d="video",i.next=29;break;case 24:return i.next=26,v.default(e);case 26:x=i.sent,u=new h.CanvasTexture(x),d="text";case 29:if(u.minFilter=h.LinearFilter,u.magFilter=h.LinearFilter,u.format=h.RGBAFormat,u.needsUpdate=!0,j="video"===d?"0.0001":"0",e.style.setProperty("opacity",j),y={src:{value:u},resolution:{value:new h.Vector2},offset:{value:new h.Vector2},time:{value:0},enterTime:{value:-1},leaveTime:{value:-1},mouse:{value:new h.Vector2}},w={},void 0!==r.uniforms)for(O=Object.keys(r.uniforms),F=0,_=O;F<_.length;F++)V=_[F],"function"===typeof(C=r.uniforms[V])?(y[V]={value:C()},w[V]=C):y[V]={value:C};S=new h.Scene,X=new h.PlaneGeometry(2,2),(D=new h.ShaderMaterial({vertexShader:m.DEFAULT_VERTEX_SHADER,fragmentShader:a,transparent:!0,uniforms:y})).extensions={derivatives:!0,drawBuffers:!0,fragDepth:!0,shaderTextureLOD:!0},S.add(new h.Mesh(X,D)),T=Date.now()/1e3,I={type:d,element:e,isInViewport:l,width:c.width,height:c.height,scene:S,uniforms:y,uniformGenerators:w,startTime:T,enterTime:l?T:-1,leaveTime:1/0,release:null!==(n=r.release)&&void 0!==n?n:0,isGif:f,overflow:null!==(t=r.overflow)&&void 0!==t&&t},this.elements.push(I);case 46:case"end":return i.stop()}}),o,this)})))}},{key:"removeElement",value:function(e){var n=this.elements.findIndex((function(n){return n.element===e}));-1!==n&&this.elements.splice(n,1)}},{key:"updateTextElement",value:function(e){var n=this.elements.findIndex((function(n){return n.element===e}));return-1!==n?this.rerenderTextElement(this.elements[n]):Promise.resolve()}},{key:"play",value:function(){this.isPlaying=!0,this.playLoop()}},{key:"stop",value:function(){this.isPlaying=!1}},{key:"isRectInViewport",value:function(e){return e.left<=this.w&&e.right>=0&&e.top<=this.h&&e.bottom>=0}}]),e}();n.default=b},88:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.default=function(e,n){var t=e.getBoundingClientRect(),r=null!==n&&void 0!==n?n:document.createElement("canvas");r.width=Math.max(1.01*t.width,t.width+1),r.height=Math.max(1.01*t.height,t.height+1);var i=e.cloneNode(),o=window.getComputedStyle(e);Array.from(o).forEach((function(e){i.style.setProperty(e,o.getPropertyValue(e),o.getPropertyPriority(e))})),i.innerHTML=e.innerHTML;var s=document.createElement("div");s.style.setProperty("text-align",o.textAlign),s.style.setProperty("vertical-align",o.verticalAlign),s.appendChild(i);var a=function(e){var n=document.implementation.createHTMLDocument("test"),t=n.createRange();t.selectNodeContents(n.documentElement),t.deleteContents();var r=document.createElement("head");return n.documentElement.appendChild(r),n.documentElement.appendChild(t.createContextualFragment(e)),n.documentElement.setAttribute("xmlns",n.documentElement.namespaceURI),(new XMLSerializer).serializeToString(n).replace(/<!DOCTYPE html>/,"")}(s.outerHTML),c='<svg xmlns="http://www.w3.org/2000/svg" width="'.concat(r.width,'" height="').concat(r.height,'">')+'<foreignObject width="100%" height="100%">'.concat(a,"</foreignObject></svg>");return new Promise((function(e,n){var t=new Image;t.onload=function(){var i=r.getContext("2d");if(null===i)return n();i.drawImage(t,0,0),e(r)},t.src="data:image/svg+xml;charset=utf-8,".concat(encodeURIComponent(c))}))}},89:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.shaders=n.DEFAULT_VERTEX_SHADER=void 0,n.DEFAULT_VERTEX_SHADER="\nprecision mediump float;\nvoid main() {\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",n.shaders={uvGradient:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n    void main() {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        gl_FragColor = vec4(uv, sin(time) * .5 + .5, 1);\n\n        vec4 img = texture2D(src, uv);\n        gl_FragColor *= smoothstep(0., 1., img.a);\n    }\n    ",rainbow:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    vec3 hsv2rgb(vec3 c) {\n        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n    }\n\n    vec3 rgb2hsv(vec3 c) {\n        vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n        vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n        vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n        float d = q.x - min(q.w, q.y);\n        float e = 1.0e-10;\n        return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n    }\n\n    vec3 hueShift(vec3 rgb, float t) {\n        vec3 hsv = rgb2hsv(rgb);\n        hsv.x = fract(hsv.x + t);\n        return hsv2rgb(hsv);\n    }\n\n    void main() {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        vec2 uv2 = uv;\n        uv2.x *= resolution.x / resolution.y;\n\n        float x = (uv2.x - uv2.y) - fract(time);\n\n        vec4 img = texture2D(src, uv);\n        float gray = length(img.rgb);\n\n        img.rgb = vec3(hueShift(vec3(1,0,0), x) * gray);\n\n        gl_FragColor = img;\n    }\n    ",glitch:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    float nn(float y, float t) {\n        float n = (\n            sin(y * .07 + t * 8. + sin(y * .5 + t * 10.)) +\n            sin(y * .7 + t * 2. + sin(y * .3 + t * 8.)) * .7 +\n            sin(y * 1.1 + t * 2.8) * .4\n        );\n\n        n += sin(y * 124. + t * 100.7) * sin(y * 877. - t * 38.8) * .3;\n\n        return n;\n    }\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        vec4 color = texture2D(src, uv);\n\n        float t = mod(time, 3.14 * 10.);\n\n        // Seed value\n        float v = fract(sin(t * 2.) * 700.);\n\n        if (abs(nn(uv.y, t)) < 1.2) {\n            v *= 0.01;\n        }\n\n        // Prepare for chromatic Abbreveation\n        vec2 focus = vec2(0.5);\n        float d = v * 0.6;\n        vec2 ruv = focus + (uv - focus) * (1. - d);\n        vec2 guv = focus + (uv - focus) * (1. - 2. * d);\n        vec2 buv = focus + (uv - focus) * (1. - 3. * d);\n\n        // Random Glitch\n        if (v > 0.1) {\n            // Randomize y\n            float y = floor(uv.y * 13. * sin(35. * t)) + 1.;\n            if (sin(36. * y * v) > 0.9) {\n                ruv.x = uv.x + sin(76. * y) * 0.1;\n                guv.x = uv.x + sin(34. * y) * 0.1;\n                buv.x = uv.x + sin(59. * y) * 0.1;\n            }\n\n            // RGB Shift\n            v = pow(v * 1.5, 2.) * 0.15;\n            color.rgb *= 0.3;\n            color.r += texture2D(src, vec2(uv.x + sin(t * 123.45) * v, uv.y)).r;\n            color.g += texture2D(src, vec2(uv.x + sin(t * 157.67) * v, uv.y)).g;\n            color.b += texture2D(src, vec2(uv.x + sin(t * 143.67) * v, uv.y)).b;\n        }\n\n        // Compose Chromatic Abbreveation\n        if (abs(nn(uv.y, t)) > 1.1) {\n            color.r = color.r * 0.5 + color.r * texture2D(src, ruv).r;\n            color.g = color.g * 0.5 + color.g * texture2D(src, guv).g;\n            color.b = color.b * 0.5 + color.b * texture2D(src, buv).b;\n            color *= 2.;\n        }\n\n        gl_FragColor = color;\n        gl_FragColor.a = step(.1, length(color.rgb));\n    }\n    ",pixelate:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        float b = sin(time * 2.) * 32. + 48.;\n        uv = floor(uv * b) / b;\n        gl_FragColor = texture2D(src, uv);\n    }\n    ",rgbGlitch:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    float random(vec2 st) {\n        return fract(sin(dot(st, vec2(948.,824.))) * 30284.);\n    }\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        vec2 uvr = uv, uvg = uv, uvb = uv;\n\n        float tt = mod(time, 17.);\n\n        if (fract(tt * 0.73) > .8 || fract(tt * 0.91) > .8) {\n            float t = floor(tt * 11.);\n\n            float n = random(vec2(t, floor(uv.y * 17.7)));\n            if (n > .7) {\n                uvr.x += random(vec2(t, 1.)) * .1 - 0.05;\n                uvg.x += random(vec2(t, 2.)) * .1 - 0.05;\n                uvb.x += random(vec2(t, 3.)) * .1 - 0.05;\n            }\n\n            float ny = random(vec2(t * 17. + floor(uv * 19.7)));\n            if (ny > .7) {\n                uvr.x += random(vec2(t, 4.)) * .1 - 0.05;\n                uvg.x += random(vec2(t, 5.)) * .1 - 0.05;\n                uvb.x += random(vec2(t, 6.)) * .1 - 0.05;\n            }\n        }\n\n        vec4 cr = texture2D(src, uvr);\n        vec4 cg = texture2D(src, uvg);\n        vec4 cb = texture2D(src, uvb);\n\n        gl_FragColor = vec4(\n            cr.r,\n            cg.g,\n            cb.b,\n            step(.1, cr.a + cg.a + cb.a)\n        );\n    }\n    ",rgbShift:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    float nn(float y, float t) {\n        float n = (\n            sin(y * .07 + t * 8. + sin(y * .5 + t * 10.)) +\n            sin(y * .7 + t * 2. + sin(y * .3 + t * 8.)) * .7 +\n            sin(y * 1.1 + t * 2.8) * .4\n        );\n\n        n += sin(y * 124. + t * 100.7) * sin(y * 877. - t * 38.8) * .3;\n\n        return n;\n    }\n\n    float step2(float t, vec2 uv) {\n        return step(t, uv.x) * step(t, uv.y);\n    }\n\n    float inside(vec2 uv) {\n        return step2(0., uv) * step2(0., 1. - uv);\n    }\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        vec2 uvr = uv, uvg = uv, uvb = uv;\n\n        float t = mod(time, 30.);\n\n        float amp = 10. / resolution.x;\n\n        if (abs(nn(uv.y, t)) > 1.) {\n            uvr.x += nn(uv.y, t) * amp;\n            uvg.x += nn(uv.y, t + 10.) * amp;\n            uvb.x += nn(uv.y, t + 20.) * amp;\n        }\n\n        vec4 cr = texture2D(src, uvr) * inside(uvr);\n        vec4 cg = texture2D(src, uvg) * inside(uvg);\n        vec4 cb = texture2D(src, uvb) * inside(uvb);\n\n        gl_FragColor = vec4(\n            cr.r,\n            cg.g,\n            cb.b,\n            step(.1, cr.a + cg.a + cb.a)\n        );\n    }\n    ",halftone:'\n    // Halftone Effect by zoidberg\n    // https://www.interactiveshaderformat.com/sketches/234\n\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    // TODO: uniform\n    #define gridSize 10.0\n    #define dotSize 0.7\n    #define smoothing 0.15\n    #define speed 1.0\n\n    #define IMG_PIXEL(x, y) texture2D(x, (y - offset) / resolution);\n\n    vec4 gridRot = vec4(15.0, 45.0, 75.0, 0.0);\n\n    // during calculation we find the closest dot to a frag, determine its size, and then determine the size of the four dots above/below/right/left of it. this array of offsets move "one left", "one up", "one right", and "one down"...\n    vec2 originOffsets[4];\n\n    void main() {\n        vec2 fragCoord = gl_FragCoord.xy - offset;\n\n        // a halftone is an overlapping series of grids of dots\n        // each grid of dots is rotated by a different amount\n        // the size of the dots determines the colors. the shape of the dot should never change (always be a dot with regular edges)\n        originOffsets[0] = vec2(-1.0, 0.0);\n        originOffsets[1] = vec2(0.0, 1.0);\n        originOffsets[2] = vec2(1.0, 0.0);\n        originOffsets[3] = vec2(0.0, -1.0);\n\n        vec3 rgbAmounts = vec3(0.0);\n\n        // for each of the channels (i) of RGB...\n        for (float i=0.0; i<3.0; ++i) {\n            // figure out the rotation of the grid in radians\n            float rotRad = radians(gridRot[int(i)]);\n\n            // the grids are rotated counter-clockwise- to find the nearest dot, take the fragment pixel loc,\n            // rotate it clockwise, and split by the grid to find the center of the dot. then rotate this\n            // coord counter-clockwise to yield the location of the center of the dot in pixel coords local to the render space\n            mat2 ccTrans = mat2(vec2(cos(rotRad), sin(rotRad)), vec2(-1.0*sin(rotRad), cos(rotRad)));\n            mat2 cTrans = mat2(vec2(cos(rotRad), -1.0*sin(rotRad)), vec2(sin(rotRad), cos(rotRad)));\n\n            // find the location of the frag in the grid (prior to rotating it)\n            vec2 gridFragLoc = cTrans * fragCoord.xy;\n\n            // find the center of the dot closest to the frag- there\'s no "round" in GLSL 1.2, so do a "floor" to find the dot to the bottom-left of the frag, then figure out if the frag would be in the top and right halves of that square to find the closest dot to the frag\n            vec2 gridOriginLoc = vec2(floor(gridFragLoc.x/gridSize), floor(gridFragLoc.y/gridSize));\n\n            vec2 tmpGridCoords = gridFragLoc/vec2(gridSize);\n            bool fragAtTopOfGrid = ((tmpGridCoords.y-floor(tmpGridCoords.y)) > (gridSize/2.0)) ? true : false;\n            bool fragAtRightOfGrid = ((tmpGridCoords.x-floor(tmpGridCoords.x)) > (gridSize/2.0)) ? true : false;\n            if (fragAtTopOfGrid)\n                gridOriginLoc.y = gridOriginLoc.y + 1.0;\n            if (fragAtRightOfGrid)\n                gridOriginLoc.x = gridOriginLoc.x + 1.0;\n\n            // ...at this point, "gridOriginLoc" contains the grid coords of the nearest dot to the fragment being rendered\n            // convert the location of the center of the dot from grid coords to pixel coords\n            vec2 gridDotLoc = vec2(gridOriginLoc.x*gridSize, gridOriginLoc.y*gridSize) + vec2(gridSize/2.0);\n\n            // rotate the pixel coords of the center of the dot so they become relative to the rendering space\n            vec2 renderDotLoc = ccTrans * gridDotLoc;\n\n            // get the color of the pixel of the input image under this dot (the color will ultimately determine the size of the dot)\n            vec4 renderDotImageColorRGB = IMG_PIXEL(src, renderDotLoc + offset);\n\n            // the amount of this channel is taken from the same channel of the color of the pixel of the input image under this halftone dot\n            float imageChannelAmount = renderDotImageColorRGB[int(i)];\n\n            // the size of the dot is determined by the value of the channel\n            float dotRadius = imageChannelAmount * (gridSize * dotSize);\n            float fragDistanceToDotCenter = distance(fragCoord.xy, renderDotLoc);\n            if (fragDistanceToDotCenter < dotRadius) {\n                rgbAmounts[int(i)] += smoothstep(dotRadius, dotRadius-(dotRadius*smoothing), fragDistanceToDotCenter);\n            }\n\n            // calcluate the size of the dots abov/below/to the left/right to see if they\'re overlapping\n            for (float j=0.0; j<4.0; ++j) {\n                gridDotLoc = vec2((gridOriginLoc.x+originOffsets[int(j)].x)*gridSize, (gridOriginLoc.y+originOffsets[int(j)].y)*gridSize) + vec2(gridSize/2.0);\n\n                renderDotLoc = ccTrans * gridDotLoc;\n                renderDotImageColorRGB = IMG_PIXEL(src, renderDotLoc + offset);\n\n                imageChannelAmount = renderDotImageColorRGB[int(i)];\n                dotRadius = imageChannelAmount * (gridSize*1.50/2.0);\n                fragDistanceToDotCenter = distance(fragCoord.xy, renderDotLoc);\n                if (fragDistanceToDotCenter < dotRadius) {\n                    rgbAmounts[int(i)] += smoothstep(dotRadius, dotRadius-(dotRadius*smoothing), fragDistanceToDotCenter);\n                }\n            }\n        }\n\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        vec4 original = texture2D(src, uv);\n        float alpha = step(.1, rgbAmounts[0] + rgbAmounts[1] + rgbAmounts[2] + original.a);\n\n        gl_FragColor = vec4(rgbAmounts[0], rgbAmounts[1], rgbAmounts[2], alpha);\n    }\n    ',sinewave:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    float inside(in vec2 uv) {\n        return step(0., uv.x) * step(uv.x, 1.) * step(0., uv.y) * step(uv.y, 1.);\n    }\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        vec2 uvr = uv, uvg = uv, uvb = uv;\n\n        float amp = 20. / resolution.x;\n\n        uvr.x += sin(uv.y * 7. + time * 3.) * amp;\n        uvg.x += sin(uv.y * 7. + time * 3. + .4) * amp;\n        uvb.x += sin(uv.y * 7. + time * 3. + .8) * amp;\n\n        vec4 cr = texture2D(src, uvr) * inside(uvr);\n        vec4 cg = texture2D(src, uvg) * inside(uvg);\n        vec4 cb = texture2D(src, uvb) * inside(uvb);\n\n        gl_FragColor = vec4(\n            cr.r,\n            cg.g,\n            cb.b,\n            cr.a + cg.a + cb.a\n        );\n    }\n    ",shine:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        vec2 p = uv * 2. - 1.;\n        float a = atan(p.y, p.x);\n\n        vec4 col = texture2D(src, uv);\n        float gray = length(col.rgb);\n\n        float level = 1. + sin(a * 10. + time * 3.) * 0.2;\n\n        gl_FragColor = vec4(1, 1, .5, col.a) * level;\n    }\n    ",blink:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        gl_FragColor = texture2D(src, uv) * (sin(time * 5.) * 0.2 + 0.8);\n    }\n\n    ",spring:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n        uv = (uv - .5) * (1.05 + sin(time * 5.) * 0.05) + .5;\n\n        if (uv.x < 0. || uv.x > 1. || uv.y < 0. || uv.y > 1.) { discard; }\n\n        gl_FragColor = texture2D(src, uv);\n    }\n    ",warpTransition:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform float enterTime;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        if (enterTime < 1.5) {\n            float t = enterTime / 1.5;\n            uv.x += sin(floor(uv.y * 300.)) * 3. * exp(t * -10.);\n        }\n\n        gl_FragColor = texture2D(src, uv);\n    }\n    ",slitScanTransition:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform float enterTime;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        if (enterTime < 1.5) {\n            float t = 1. - enterTime / 1.5;\n            uv.y = uv.y > t ? uv.y : t;\n        }\n\n        gl_FragColor = texture2D(src, uv);\n    }\n    ",pixelateTransition:"\n    precision mediump float;\n    uniform vec2 resolution;\n    uniform vec2 offset;\n    uniform float time;\n    uniform float enterTime;\n    uniform sampler2D src;\n\n    void main (void) {\n        vec2 uv = (gl_FragCoord.xy - offset) / resolution;\n\n        if (enterTime < 1.5) {\n            float t = enterTime / 1.5;\n\n            float b = floor(t * 64.);\n            uv = (floor(uv * b) + .5) / b;\n        }\n\n        gl_FragColor = texture2D(src, uv);\n    }\n    "}},90:function(e,n,t){"use strict";var r=t(14),i=t(51),o=t(52),s=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(i,o){function s(e){try{c(r.next(e))}catch(n){o(n)}}function a(e){try{c(r.throw(e))}catch(n){o(n)}}function c(e){var n;e.done?i(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,a)}c((r=r.apply(e,n||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var c=a(t(91)),l=function(){function e(n,t,r,o){i(this,e),this.frames=[],this.index=0,this.playTime=0,this.frames=n,this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.pixelRatio=o,this.canvas.width=t,this.canvas.height=r,this.startTime=Date.now()}return o(e,[{key:"getCanvas",value:function(){return this.canvas}},{key:"update",value:function(){for(var e=Date.now()-this.startTime;this.playTime<e;){var n=this.frames[this.index%this.frames.length];this.playTime+=n.delay,this.index++}var t=this.frames[this.index%this.frames.length],r=new ImageData(t.patch,t.dims.width,t.dims.height);this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.putImageData(r,t.dims.left,t.dims.top)}}],[{key:"create",value:function(n,t){return s(this,void 0,void 0,r.mark((function i(){var o,s,a,l;return r.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,fetch(n).then((function(e){return e.arrayBuffer()})).then((function(e){return new c.default(e)}));case 2:return o=r.sent,s=o.decompressFrames(!0,void 0,void 0),a=o.raw.lsd.width,l=o.raw.lsd.height,r.abrupt("return",new e(s,a,l,t));case 7:case"end":return r.stop()}}),i)})))}}]),e}();n.default=l},91:function(e,n,t){"use strict";var r=t(92);e.exports=r},92:function(e,n,t){"use strict";var r=t(93),i=t(95);function o(e){var n=new Uint8Array(e),t=new r(n);this.raw=t.parse(i),this.raw.hasImages=!1;for(var o=0;o<this.raw.frames.length;o++)if(this.raw.frames[o].image){this.raw.hasImages=!0;break}}o.prototype.decompressFrame=function(e,n){if(e>=this.raw.frames.length)return null;var t=this.raw.frames[e];if(t.image){var r=t.image.descriptor.width*t.image.descriptor.height,i=function(e,n,t){var r,i,o,s,a,c,l,u,d,f,h,v,m,p,g,b,x=4096,j=-1,y=t,w=new Array(t),O=new Array(x),F=new Array(x),_=new Array(x+1);for(a=(i=1<<(v=e))+1,r=i+2,l=j,o=(1<<(s=v+1))-1,d=0;d<i;d++)O[d]=0,F[d]=d;for(h=u=m=p=b=g=0,f=0;f<y;){if(0===p){if(u<s){h+=n[g]<<u,u+=8,g++;continue}if(d=h&o,h>>=s,u-=s,d>r||d==a)break;if(d==i){o=(1<<(s=v+1))-1,r=i+2,l=j;continue}if(l==j){_[p++]=F[d],l=d,m=d;continue}for(c=d,d==r&&(_[p++]=m,d=l);d>i;)_[p++]=F[d],d=O[d];m=255&F[d],_[p++]=m,r<x&&(O[r]=l,F[r]=m,0===(++r&o)&&r<x&&(s++,o+=r)),l=c}p--,w[b++]=_[p],f++}for(f=b;f<y;f++)w[f]=0;return w}(t.image.data.minCodeSize,t.image.data.blocks,r);t.image.descriptor.lct.interlaced&&(i=function(e,n){for(var t=new Array(e.length),r=e.length/n,i=function(r,i){var o=e.slice(i*n,(i+1)*n);t.splice.apply(t,[r*n,n].concat(o))},o=[0,4,2,1],s=[8,8,4,2],a=0,c=0;c<4;c++)for(var l=o[c];l<r;l+=s[c])i(l,a),a++;return t}(i,t.image.descriptor.width));var o={pixels:i,dims:{top:t.image.descriptor.top,left:t.image.descriptor.left,width:t.image.descriptor.width,height:t.image.descriptor.height}};return t.image.descriptor.lct&&t.image.descriptor.lct.exists?o.colorTable=t.image.lct:o.colorTable=this.raw.gct,t.gce&&(o.delay=10*(t.gce.delay||10),o.disposalType=t.gce.extras.disposal,t.gce.extras.transparentColorGiven&&(o.transparentIndex=t.gce.transparentColorIndex)),n&&(o.patch=function(e){for(var n=e.pixels.length,t=new Uint8ClampedArray(4*n),r=0;r<n;r++){var i=4*r,o=e.pixels[r],s=e.colorTable[o];t[i]=s[0],t[i+1]=s[1],t[i+2]=s[2],t[i+3]=o!==e.transparentIndex?255:0}return t}(o)),o}return null},o.prototype.decompressFrames=function(e,n,t){void 0===n&&(n=0),t=void 0===t?this.raw.frames.length:Math.min(t,this.raw.frames.length);for(var r=[],i=n;i<t;i++){this.raw.frames[i].image&&r.push(this.decompressFrame(i,e))}return r},e.exports=o},93:function(e,n,t){"use strict";var r=t(94);function i(e){this.stream=new r(e),this.output={}}i.prototype.parse=function(e){return this.parseParts(this.output,e),this.output},i.prototype.parseParts=function(e,n){for(var t=0;t<n.length;t++){var r=n[t];this.parsePart(e,r)}},i.prototype.parsePart=function(e,n){var t,r=n.label;if(!n.requires||n.requires(this.stream,this.output,e))if(n.loop){for(var i=[];n.loop(this.stream);){var o={};this.parseParts(o,n.parts),i.push(o)}e[r]=i}else n.parts?(t={},this.parseParts(t,n.parts),e[r]=t):n.parser?(t=n.parser(this.stream,this.output,e),n.skip||(e[r]=t)):n.bits&&(e[r]=this.parseBits(n.bits))},i.prototype.parseBits=function(e){var n={},t=this.stream.readBitArray();for(var r in e){var i=e[r];i.length?n[r]=t.slice(i.index,i.index+i.length).reduce((function(e,n){return 2*e+n}),0):n[r]=t[i.index]}return n},e.exports=i},94:function(e,n,t){"use strict";function r(e){this.data=e,this.pos=0}r.prototype.readByte=function(){return this.data[this.pos++]},r.prototype.peekByte=function(){return this.data[this.pos]},r.prototype.readBytes=function(e){return this.data.subarray(this.pos,this.pos+=e)},r.prototype.peekBytes=function(e){return this.data.subarray(this.pos,this.pos+e)},r.prototype.readString=function(e){for(var n="",t=0;t<e;t++)n+=String.fromCharCode(this.readByte());return n},r.prototype.readBitArray=function(){for(var e=[],n=this.readByte(),t=7;t>=0;t--)e.push(!!(n&1<<t));return e},r.prototype.readUnsigned=function(e){var n=this.readBytes(2);return e?(n[1]<<8)+n[0]:(n[0]<<8)+n[1]},e.exports=r},95:function(e,n,t){"use strict";var r=t(96),i={label:"blocks",parser:function(e){for(var n=[],t=0,r=e.readByte();0!==r;r=e.readByte())n.push(e.readBytes(r)),t+=r;var i=new Uint8Array(t);t=0;for(var o=0;o<n.length;o++)i.set(n[o],t),t+=n[o].length;return i}},o={label:"gce",requires:function(e){var n=e.peekBytes(2);return 33===n[0]&&249===n[1]},parts:[{label:"codes",parser:r.readBytes(2),skip:!0},{label:"byteSize",parser:r.readByte()},{label:"extras",bits:{future:{index:0,length:3},disposal:{index:3,length:3},userInput:{index:6},transparentColorGiven:{index:7}}},{label:"delay",parser:r.readUnsigned(!0)},{label:"transparentColorIndex",parser:r.readByte()},{label:"terminator",parser:r.readByte(),skip:!0}]},s={label:"image",requires:function(e){return 44===e.peekByte()},parts:[{label:"code",parser:r.readByte(),skip:!0},{label:"descriptor",parts:[{label:"left",parser:r.readUnsigned(!0)},{label:"top",parser:r.readUnsigned(!0)},{label:"width",parser:r.readUnsigned(!0)},{label:"height",parser:r.readUnsigned(!0)},{label:"lct",bits:{exists:{index:0},interlaced:{index:1},sort:{index:2},future:{index:3,length:2},size:{index:5,length:3}}}]},{label:"lct",requires:function(e,n,t){return t.descriptor.lct.exists},parser:r.readArray(3,(function(e,n,t){return Math.pow(2,t.descriptor.lct.size+1)}))},{label:"data",parts:[{label:"minCodeSize",parser:r.readByte()},i]}]},a={label:"text",requires:function(e){var n=e.peekBytes(2);return 33===n[0]&&1===n[1]},parts:[{label:"codes",parser:r.readBytes(2),skip:!0},{label:"blockSize",parser:r.readByte()},{label:"preData",parser:function(e,n,t){return e.readBytes(t.text.blockSize)}},i]},c={label:"frames",parts:[o,{label:"application",requires:function(e,n,t){var r=e.peekBytes(2);return 33===r[0]&&255===r[1]},parts:[{label:"codes",parser:r.readBytes(2),skip:!0},{label:"blockSize",parser:r.readByte()},{label:"id",parser:function(e,n,t){return e.readString(t.blockSize)}},i]},{label:"comment",requires:function(e,n,t){var r=e.peekBytes(2);return 33===r[0]&&254===r[1]},parts:[{label:"codes",parser:r.readBytes(2),skip:!0},i]},s,a],loop:function(e){var n=e.peekByte();return 33===n||44===n}},l=[{label:"header",parts:[{label:"signature",parser:r.readString(3)},{label:"version",parser:r.readString(3)}]},{label:"lsd",parts:[{label:"width",parser:r.readUnsigned(!0)},{label:"height",parser:r.readUnsigned(!0)},{label:"gct",bits:{exists:{index:0},resolution:{index:1,length:3},sort:{index:4},size:{index:5,length:3}}},{label:"backgroundColorIndex",parser:r.readByte()},{label:"pixelAspectRatio",parser:r.readByte()}]},{label:"gct",requires:function(e,n){return n.lsd.gct.exists},parser:r.readArray(3,(function(e,n){return Math.pow(2,n.lsd.gct.size+1)}))},c];e.exports=l},96:function(e,n,t){"use strict";var r={readByte:function(){return function(e){return e.readByte()}},readBytes:function(e){return function(n){return n.readBytes(e)}},readString:function(e){return function(n){return n.readString(e)}},readUnsigned:function(e){return function(n){return n.readUnsigned(e)}},readArray:function(e,n){return function(t,r,i){for(var o=n(t,r,i),s=new Array(o),a=0;a<o;a++)s[a]=t.readBytes(e);return s}}};e.exports=r},97:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.VFXImg=void 0;var s=o(t(8)),a=t(8),c=t(35);n.VFXImg=function(e){var n=a.useContext(c.VFXContext),t=a.useRef(null),r=e.shader,i=e.release,o=e.uniforms,l=e.overflow,u=a.useCallback((function(){if(null!==t.current)return null===n||void 0===n||n.addElement(t.current,{shader:r,release:i,uniforms:o,overflow:l}),function(){null!==t.current&&(null===n||void 0===n||n.removeElement(t.current))}}),[n,r,i,o,l]);return s.createElement("img",Object.assign({ref:t},e,{onLoad:u}))}},98:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.VFXVideo=void 0;var s=o(t(8)),a=t(8),c=t(35);n.VFXVideo=function(e){var n=a.useContext(c.VFXContext),t=a.useRef(null),r=e.shader,i=e.release,o=e.uniforms,l=e.overflow,u=a.useCallback((function(){if(null!==t.current)return null===n||void 0===n||n.addElement(t.current,{shader:r,release:i,uniforms:o,overflow:l}),function(){null!==t.current&&(null===n||void 0===n||n.removeElement(t.current))}}),[n,r,i,o,l]);return s.createElement("video",Object.assign({ref:t},e,{onLoadedData:u}))}},99:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),i=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return i(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var s=o(t(8)),a=t(8),c=t(35);n.default=function(e){return function(n){var t=a.useContext(c.VFXContext),r=a.useRef(null),i=n.shader,o=n.release,l=n.uniforms,u=n.overflow;return a.useEffect((function(){var e=r.current;if(null!==e)return null===t||void 0===t||t.addElement(e,{shader:i,release:o,uniforms:l,overflow:u}),function(){null===t||void 0===t||t.removeElement(e)}}),[r,t,i,o,l,u]),a.useEffect((function(){null!==r.current&&(null===t||void 0===t||t.updateTextElement(r.current))}),[t,n.children]),s.createElement(e,Object.assign(Object.assign({},n),{ref:r}))}}}},[[151,1,2]]]);
//# sourceMappingURL=main.698ac353.chunk.js.map